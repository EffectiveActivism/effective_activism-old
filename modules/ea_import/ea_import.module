<?php

/**
 * @file
 * Contains ea_import.module.
 */

use Drupal\ea_import\Storage\ICalendarStorage;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function ea_import_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the ea_import module.
    case 'help.page.ea_import':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provides functionality to import entities from external sources.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_cron().
 */
function ea_import_cron() {
  // We access our configuration.
  $cron_config = Drupal::config('ea_import.settings');
  if ($cron_config->get('enabled')) {
    $interval = $cron_config->get('interval');
    $interval = !empty($interval) ? $interval : 3600;
    $nextExecution = \Drupal::state()->get('ea_import.next_execution');
    $nextExecution = !empty($nextExecution) ? $nextExecution : 0;
    if (REQUEST_TIME >= $nextExecution) {
      // Get ICalendar files.
      $icalendars = ICalendarStorage::load(array('enabled' => 1));
      $client = \Drupal::httpClient();
      $events = [];
      foreach ($icalendars as $icalendar) {
        $request = $client->get($icalendar->url);
        $file = $request->getBody();
        // Parse file.
        $temporaryArray = [];
        foreach(explode("BEGIN:", $file) as $key => $value) {
          $temporaryArray[$key] = explode("\n", $value);
        }
        foreach($temporaryArray as $key => $value) {
          $event = [];
          foreach($value as $subKey => $subValue) {
            if (!empty($subValue)) {
              // Skip non-events.
              if ($subKey === 0 && $subValue !== 'VEVENT') {
                continue(2);
              }
              if ($key != 0 && $subKey === 0) {
                  $event["BEGIN"] = $subValue;
              }
              else {
                $subValueArr = explode(":", $subValue, 2);
                $event[$subValueArr[0]] = $subValueArr[1];
              }
            }
          }
          $event['ea_import_grouping'] = $icalendar->gid;
          $events[] = $event;
        }
      }
      \Drupal::logger('ea_import')->notice('ea_import result: <pre>' . print_r($events, TRUE) . '</pre>');
    }
  }
}
